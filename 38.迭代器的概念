'''
    生成器与迭代器 ：
        1.可迭代的对象 ：
            1.1 生成器
            1.2 列表，元组，字典，集合，字符串
        2.迭代器的特点：
            2.1 迭代是访问集合元素的一种形式
            2.2 迭代器是一个可以记住遍历位置的对象
            2.3 迭代器对象从集合的第一个元素开始访问，直到所有的元素被访问完结束
            2.4 迭代器只能往前，不能后退
            2.5 可以被next() 函数调用，并不断返回下一个值的对象，称为迭代器：Iterator

        5. 如何判断一个对象是 可迭代的对象？
            from collections import Iterable
            from typing import Iterable # 新版本的python 支持这一种 方式
            list1 = [12,3,4,5,6]
            f = isinstance(list1,Iterable)
            print(f) # 这个地方就是返回Ture or False
        3. 问 : 可迭代的是不是 肯定就是迭代器？
            答：3.1 生成器 是可迭代的，也是 迭代器；
                3.2 列表 是可迭代的，不是迭代器；
        4. 问 ： 如何把 列表这个可迭代的对象，转换成迭代器？
            答：通过 iter(xx)函数强转一下即可
'''

#1.判断一个对象是否是可迭代的对象

#1.1 生成器
    from typing import Iterable

    g1 = (x*3 for x in range(10))
    f1 = isinstance(g1,Iterable)
    print(f1) # True
#1.2 列表
    list1 = [1,2,3,4,5,6]
    f2 = isinstance(list1, Iterable)
    print(f2) # True
#1.3 元组
    tuple1 = (1,2,3,4,5,6)
    f3 = isinstance(tuple1, Iterable)
    print(f3) # True
#1.4 字典
    dict1 = {'name':'aaa','age':18}
    f4 = isinstance(dict1, Iterable)
    print(f4) # True
#1.5 集合
    set1 = {1,2,3,4,5,6}
    f4 = isinstance(set1, Iterable)
    print(f4) # True
#1.6 字符串
    str1 = 'aasdfadsfadfd'
    f5 = isinstance(str1, Iterable)
    print(f5) # True

#1.7 数字
    a = 100
    f6 = isinstance(a, Iterable)
    print(f6) # False

print('*'*30)

#2.判断是否是迭代器：使用next()方法即可
#2.1 生成器
    g2 = (x*3 for x in range(10))
    print(next(g2)) # 0
    print(next(g2)) # 3

#2.2 列表
    list2 = [1,2,3,4,5,6]
    print(next(list2)) # TypeError: 'list' object is not an iterator
    print(next(list2))


#3. 把可迭代的对象 转换成 迭代器
    list3 = [1,2,3,4,5,6]
    list3_1 = iter(list3)
    print(next(list3_1)) # 1
    print(next(list3_1)) # 2
