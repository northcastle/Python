
'''
    集合 ： set  无序的 不重复的 
            符号 ： 也是一个大括号 {}，不过里面的内容是一个一个的元素，而不是键值对
        1. 添加 ： add() : 添加一个元素，
                            不能把列表当作一个整体放进来
                            但是，元组是可以当作一个整体放进来的
                   update() : 可以把列表或者元组中的元素拆开，然后只放入元素

        2. 删除 ： remove() : 删除某一个元素，如果找不到，抛出异常
                   pop() : 随即删除一个元素，不过默认都会删除第一个元素
                   clear() : 清空集合
                   dicard() : 与remove() 类似，不过当没有元素的时候，不会抛出异常

        3.其他的符号操作 ：
                   in : 判断元素是否在几何中
                   == ： 判断两个集合中的元素是否相等
                   != :  判断两个集合中的元素是否不相等
                   + : 不支持
                   * : 不支持
                   -（difference()） : 找出两个集合之间的差集，不一样的部分
                                       例如 ： s6-s5 : 找出 s6中存在，但是 s5 中不存在的元素
                    &（intersection()） : 交集，就是数学中的交集
                    
                    | (union()) : 并集，就是数学中的并集
                   
'''

#1.创建空的集合
  s1 = set()
  print(type(s1)) # <class 'set'>
#2.创建有元素的集合
  s2 = {11, 22, 22, 33}
  print(s2) # {33, 11, 22}
#3.把一个列表快速的去除重复的元素
  list1 = [1, 1, 22, 22, 3, 4, 5, 6]
  print(list1) # [1, 1, 22, 22, 3, 4, 5, 6]
  s3 = set(list1)
  print(s3) # {1, 3, 4, 5, 6, 22} : 无序 且 不重复

  print('-'*20)
#4.添加操作 1.add() 2.update()
  s4 = set()
  print(s4) # set() 空的集合
  
  s4.add('abc')
  s4.add(123)
  s4.add(12.5)
  print(s4) # {123, 12.5, 'abc'}

  t1 = (7,8,9)
  s4.add(t1)
  print(s4) # {(7, 8, 9), 'abc', 123, 12.5} ；元组是可以放进来的

  list2 = [1,2,3]
  s4.update(list2)
  print(s4) # {1, 2, 3, 'abc', 12.5, 123} : 把列表中的元素放进来了

#5.删除操作 1. remove() 2. pop() 3. clear() 4.dicard()
  s4.remove(1)
  print(s4) # {2, 3, 12.5, 'abc', (7, 8, 9), 123}
  s4.pop()
  print(s4) # {2, 3, 12.5, (7, 8, 9), 123}
  s4.clear()
  print(s4) # set()
  s4.discard('aaa')
  print(s4) # set()

# 6.in, ==, != 三个符号的使用
  s5 = {1, 2, 3, 4}
  s6 = {11, 22, 33, 44, 55, 66}
  print(3 in s5) # True
  print(s5 == s6) # False
  print(s5 != s6) # True


#7.求两个集合的差集的操作
  s5 = {1, 2, 3, 4}
  s6 = {11, 22, 33, 44, 55, 66}
  print(s6-s5) # {33, 66, 11, 44, 22, 55}
  print(s6.difference(s5)) # {33, 66, 11, 44, 22, 55}
  print(s5-s6) # {1, 2, 3, 4}

#8.求两个集合的交集
  s11 = {1,2,3,4,5}
  s22 = {1,2,3,4,6}
  print(s11 & s22) # {1, 2, 3, 4}
  print(s11.intersection(s22)) # {1, 2, 3, 4}

#9.求两个集合的并集
  s11 = {1,2,3,4,5}
  s22 = {1,2,3,4,6}
  print(s11 | s22) # {1, 2, 3, 4, 5, 6}
  print(s11.union(s22)) # {1, 2, 3, 4, 5, 6}
