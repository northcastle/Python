'''
    背景 ：
        1.通过列表推导式，可以直接创建一个列表。
        2.但是，受内存限制，列表的容量肯定是有限的。
        3.而且，如果创建一个包含100万个元素的列表，不仅占用很大的存储空间，
                如果我们仅仅需要访问前面几个元素，那后面绝大多数元素占的空间都白白浪费了。
        4.所以，列表元素如果可以按照某种算法推算出来，那我们是否可以再循环的过程中不断推算出后续的元素呢？
        5.这样就不必创建完整的list,从而节省大量的空间。
        6.再Python中，这种一边循环，一边计算的机制，称为生成器：generator

    得到生成器的两种方式 ：
        1.通过列表推导式得到生成器：简单的时候

        2.通过函数的方式得到生成器：添加yield
            yield 关键子的作用
                2.1 返回后面跟着的参数，也就是这一次生成的元素
                2.2 在这个位子暂停，等待下一次使用


'''
#1. 通过 列表推导式 得到生成器：
#   注意 ： 使用小括号，而不是使用方括号
    g = (x*3 for x in range(20))
    print(type(g)) # <class 'generator'>

#2.借助函数 完成生成器：
    def g_function():
        n = 0
        while True:
            n += 1
            print(n)
            yield n

    g2 = g_function()
    print(type(g2)) # <class 'generator'>


